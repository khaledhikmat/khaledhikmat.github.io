(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{132:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return a})),r.d(t,"metadata",(function(){return c})),r.d(t,"toc",(function(){return s})),r.d(t,"default",(function(){return u}));var n=r(3),o=r(7),i=(r(0),r(138)),a={title:"Point to Site Connectivity in Azure",author:"Khaled Hikmat",author_title:"Software Engineer",author_url:"https://github.com/khaledhikmat",author_image_url:"https://avatars1.githubusercontent.com/u/3119726?s=400&u=090899e7b366dd702f9d0d5e483f20089010b25c&v=4",tags:["Azure"]},c={permalink:"/blog/2017/12/21/point-to-site-connectivity",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/blog/blog/2017-12-21-point-to-site-connectivity.md",source:"@site/blog/2017-12-21-point-to-site-connectivity.md",description:"This PowerShell script creates self-signed root and client certificates, export them and import what is needed:",date:"2017-12-21T00:00:00.000Z",tags:[{label:"Azure",permalink:"/blog/tags/azure"}],title:"Point to Site Connectivity in Azure",readingTime:1.09,truncated:!1,prevItem:{title:"Actors in Serverless",permalink:"/blog/2017/12/27/durable-functions"},nextItem:{title:"Document Deletion in Azure DocumentDB",permalink:"/blog/2017/03/30/deletes-in-docdb"}},s=[],l={toc:s};function u(e){var t=e.components,r=Object(o.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},l,r,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"This PowerShell script creates self-signed root and client certificates, export them and import what is needed:"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{}),'# Assume you are on Windows 10\n$myPassword = "some_password";\n$certsPath = "C:\\YourDir\\Certificates"\n$certNamePrefix = "YourNameP2S";\n$date = Get-date "2040-01-01";\n\n# Create a self-signed ROOT cert \n$rootCert = New-SelfSignedCertificate -Type Custom -KeySpec Signature -Subject "CN=$($certNamePrefix)Cert" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation "Cert:\\CurrentUser\\My" -KeyUsageProperty Sign -KeyUsage CertSign -NotAfter $date\n\n# Export the cert to base64 so it can be uploaded to the Point-to-Site VPN connection: refer to https://docs.microsoft.com/en-us/azure/vpn-gateway/vpn-gateway-certificates-point-to-site\n# Upload the .cer ending with \'_Encoded\'\nExport-Certificate -Cert $rootCert -FilePath "$certsPath\\$($certNamePrefix)Cert.cer" \nStart-Process -FilePath \'certutil.exe\' -ArgumentList "-encode $certsPath\\$($certNamePrefix)Cert.cer $certsPath\\$($certNamePrefix)Cert_Encoded.cer" -WindowStyle Hidden\n\n# NOTE: Download the VPN Client from Azure AFTER you upload the encoded certificate i.e. .cer file\n\n# Generate a client certificate from the self-signed certificate\n# NOTE: The self-siged root cert and the client cert must have the same subject!!!\n$clientCert = New-SelfSignedCertificate -Type Custom -KeySpec Signature -Subject "CN=$($certNamePrefix)Cert" -KeyExportPolicy Exportable -HashAlgorithm sha256 -KeyLength 2048 -CertStoreLocation "Cert:\\CurrentUser\\My" -Signer $rootCert -TextExtension @("2.5.29.37={text}1.3.6.1.5.5.7.3.2") -NotAfter $date\n\n# Export the client certificate as PFX\nExport-PfxCertificate -Cert $clientCert -ChainOption BuildChain -FilePath  "$certsPath\\$($certNamePrefix)Cert.pfx" -Password $(ConvertTo-SecureString -String $myPassword -AsPlainText -Force)\n\n# Import the PFX client cert into the user store\nImport-PfxCertificate -CertStoreLocation Cert:\\CurrentUser\\my\\ -FilePath "$certsPath\\$($certNamePrefix)Cert.pfx" -Exportable -Password $(ConvertTo-SecureString -String $myPassword -AsPlainText -Force)\n')),Object(i.b)("p",null,"I hope it helps someone."))}u.isMDXComponent=!0},138:function(e,t,r){"use strict";r.d(t,"a",(function(){return p})),r.d(t,"b",(function(){return m}));var n=r(0),o=r.n(n);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var l=o.a.createContext({}),u=function(e){var t=o.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},p=function(e){var t=u(e.components);return o.a.createElement(l.Provider,{value:t},e.children)},f={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},d=o.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,a=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=u(r),d=n,m=p["".concat(a,".").concat(d)]||p[d]||f[d]||i;return r?o.a.createElement(m,c(c({ref:t},l),{},{components:r})):o.a.createElement(m,c({ref:t},l))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:n,a[1]=c;for(var l=2;l<i;l++)a[l]=r[l];return o.a.createElement.apply(null,a)}return o.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"}}]);